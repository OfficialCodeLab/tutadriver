function renderDirections(object, directions, color, startpin, endpin) {
  //ssa.mobile.alert("RENDER", directions);
  
  var routes = directions.routes;
  var waypoints = directions.geocoded_waypoints;
  var mainRoute = routes[0];
  var bounds = mainRoute.bounds;
  var leg = mainRoute.legs[0];
  var overView = mainRoute.overview_polyline;
  var routePoints = decodeRoute(routes,0);

  var maplines = {
        id: "polyid1",
        startLocation:{lat: leg.start_location.lat, lon: leg.start_location.lng, name:"Pickup Location",desc:leg.start_address,image:startpin,meta:{color:"green",label:"C"}
                      },
        endLocation:{lat:  leg.end_location.lat, lon: leg.end_location.lng, name:"Destination", desc: leg.end_address,image:endpin,meta:{color:"red",label:"A"}
                      },
        locations: routePoints,
        polylineConfig:{lineColor:color, lineWidth:"4"}
            };
  //ssa.mobile.alert("RENDER", maplines);
  if(object.locationData.length > 0) object.clear();
  object.addPolyline(maplines);
  
  var newZoom = setZoomLevelFromBounds(bounds);
  var lat = (bounds.southwest.lat + bounds.northeast.lat)/2;
  var lng = (bounds.southwest.lng + bounds.northeast.lng)/2;
  
  object.navigateToLocation({ "lat" : lat, "lon": lng, name:"", desc: ""},false,false);
  overview.lat = lat;
  overview.lng = lng;
  overview.zoom = newZoom;
  overview.active = 1;
  //ssa.mobile.alert("ZOOM", "OLD = " + object.zoomLevel + " NEW = " + newZoom);
  //object.zoomLevel = newZoom-1;
}




var overview = {zoom: "",
                lat: "",
                lng: "",
                active: 0
               };


/*=========================================================*/   

var currentPos;
function updateMap() {
  //frmMap.mapMain.zoomLevel = tuta.location.zoomLevelFromLatLng(currentPos.geometry.location.lat, currentPos.geometry.location.lng);

  var pickupicon = "";
  if(frmMap.flexAddress.isVisible == false)
    pickupicon = "pickupicon.png";

  var locationData = [];

  if(overview.active === 1){
    locationData.push(
      {lat: "" + overview.lat + "", 
       lon: "" + overview.lng + "", 
       name:"Map Middle", 
       desc: "", 
       image : ""});    
  }

  //var count = 0;
  locationData.push(
    {lat: "" + currentPos.geometry.location.lat + "", 
     lon: "" + currentPos.geometry.location.lng + "", 
     name:"Pickup Location", 
     desc: currentPos.formatted_address.replace(/`+/g,""), 
     image : pickupicon + ""});


  if(nearbyDrivers.length > 0){
    locationData.push(
      {lat: "" + nearbyDrivers[0].location.lat + "", 
       lon: "" + nearbyDrivers[0].location.lng + "", 
       name: nearbyDrivers[0].id, 
       desc: "", 
       image : "cabpin0.png"});
    //count++;
  }

  frmMap.mapMain.locationData = locationData;
}

/*=========================================================*/                         

//DEPRECATED

/*=========================================================*/     



function initOld(){

  //Array of stars variables
  frm004Home.imgStar1.onTouchStart = onStarSelect;
  frm004Home.imgStar2.onTouchStart = onStarSelect;
  frm004Home.imgStar3.onTouchStart = onStarSelect;
  frm004Home.imgStar4.onTouchStart = onStarSelect;
  frm004Home.imgStar5.onTouchStart = onStarSelect;
  star.push(frm004Home.imgStar1);
  star.push(frm004Home.imgStar2);
  star.push(frm004Home.imgStar3);
  star.push(frm004Home.imgStar4);
  star.push(frm004Home.imgStar5);
  //End of stars variables

  /*=============================================================================
       ____                           _   __  __      _   _               _     
      / ___| ___ _ __   ___ _ __ __ _| | |  \/  | ___| |_| |__   ___   __| |___ 
     | |  _ / _ \ '_ \ / _ \ '__/ _` | | | |\/| |/ _ \ __| '_ \ / _ \ / _` / __|
     | |_| |  __/ | | |  __/ | | (_| | | | |  | |  __/ |_| | | | (_) | (_| \__ \
      \____|\___|_| |_|\___|_|  \__,_|_| |_|  |_|\___|\__|_| |_|\___/ \__,_|___/

  =============================================================================*/

  frm004Home.btnSubmitRating.onClick = function () {frm004Home["flexOverlay1"]["isVisible"] = false;};
  frmMessageMain.txtSearch.onTextChange = searchTxtChange;
  frm004Home.btnChs.onClick = animateMenu;

  /*=============================================================================
      _____                      ____                  _  __ _      
     |  ___|__  _ __ _ __ ___   / ___| _ __   ___  ___(_)/ _(_) ___ 
     | |_ / _ \| '__| '_ ` _ \  \___ \| '_ \ / _ \/ __| | |_| |/ __|
     |  _| (_) | |  | | | | | |  ___) | |_) |  __/ (__| |  _| | (__ 
     |_|  \___/|_|  |_| |_| |_| |____/| .__/ \___|\___|_|_| |_|\___|
                                      |_|                           
  =============================================================================*/

  //Form 1: Login Screen
  frm001LoginScreen.btnSignUp.onClick = function () {frm002SignupScreen.show();};
  frm001LoginScreen.btnLogin.onClick = function() {tuta.animate.move(frm001LoginScreen.flexMainButtons, 0.25, "", "-100%", null); tuta.animate.move(frm001LoginScreen.flexLoginButtons, 0.25, "0%", "0%", null);};
  frm001LoginScreen.btnLogin2.onClick = function () {frm003CheckBox.show();};  

  //Form 2: Signup Screen
  frm002SignupScreen.btnCheckAgree.onClick = function (){
    if(frm002SignupScreen.imgTick.isVisible === false)
      frm002SignupScreen.imgTick.setVisibility(true);
    else
      frm002SignupScreen.imgTick.setVisibility(false);
  };

  frm002SignupScreen.btnNextSignup.onClick = function () {switchForms(1);};
  frm002SignupScreen.btnPager2.onClick = function () {switchForms(1);};
  frm002SignupScreen.btnPager1.onClick = function () {switchForms(0);};
  frm002SignupScreen.btnFinishSignup.onClick = function () {frm004Home.show();};
  frm002SignupScreen.btnCheckAgree.onClick = function(){
    if((frm002SignupScreen.imgTick.isVisible===false)){
      frm002SignupScreen.imgTick.setVisibility(true);
    }
    else {
      frm002SignupScreen.imgTick.setVisibility(false);
    }
  };

  //Form 3: Checklist Form
  frm003CheckBox.btnContinue.onClick = function(){tuta.animate.move(frm003CheckBox.flexConfirmCabNumber, 0, "0", "0", null);};
  frm003CheckBox.btnCheck1.onClick = function(){frm003CheckboxToggle(frm003CheckBox.imgTick1);};
  frm003CheckBox.btnCheck2.onClick = function(){frm003CheckboxToggle(frm003CheckBox.imgTick2);};
  frm003CheckBox.btnCheck3.onClick = function(){frm003CheckboxToggle(frm003CheckBox.imgTick3);};
  frm003CheckBox.btnCheck4.onClick = function(){frm003CheckboxToggle(frm003CheckBox.imgTick4);};
  frm003CheckBox.btnCheck5.onClick = function(){frm003CheckboxToggle(frm003CheckBox.imgTick5);};
  frm003CheckBox.btnConfirmCNum.onClick = function(){frm004Home.show();};


  //Form 4: Main Map Landing Screen
  frm004Home.btnDebugOptions.onClick = function() {
    animateMenu(); 
    tuta.animate.move(frm004Home.flexDebugOptions, 0.3, "10%", "10%", null); 
    kony.timer.schedule("darken_screen", function() {
      frm004Home.flexDarken.setVisibility(true);}, 0.31, false); 
  };

  frm004Home.btnCloseDebugOptions.onClick = function() {
    frm004Home.flexDarken.setVisibility(false);
    tuta.animate.move(frm004Home.flexDebugOptions, 0.3, "10%", "-160%", null); 

  };

  frm004Home.btnLegal.onClick = function () {frmTermsConditions.show();};
  frm004Home.btnFlagDown.onClick = function () {frmFlagDown.show();};
  frm004Home.btnTestingPickup.onClick = function () {frmPickupRequest.show();};
  frm004Home.btnToggleActive.onClick = function(){
    if(driver_state === tuta.fsm.STATES.TRAWLING)
    {
      tuta.animate.move(frm004Home.imgSwitch, 0.2, "", "38", null);
      tuta.fsm.stateChange(tuta.fsm.REQUESTS.BREAK);
      frm004Home.imgSwitchBg.src = "switchbgoff.png";
      updateConsole();
    }
    else if(driver_state === tuta.fsm.STATES.IDLE)
    {
      tuta.animate.move(frm004Home.imgSwitch, 0.2, "", "0", null);
      tuta.fsm.stateChange(tuta.fsm.REQUESTS.ACTIVE);
      frm004Home.imgSwitchBg.src = "switchbgon.png";
      updateConsole();
    }
  }
  frm004Home.btnDemo.onClick = function () {frmPickupRequest.show();};
  frm004Home.btnPickupReqCheck.onClick = function(){
    if(frm004Home.imgPickReqCheck.isVisible === true){
      frm004Home.imgPickReqCheck.setVisibility(false)
      frm004Home.btnDemo.setVisibility(false);
      frm004Home.flexDemoShadow.setVisibility(false);
    }
    else{
      frm004Home.imgPickReqCheck.setVisibility(true)
      frm004Home.btnDemo.setVisibility(true);
      frm004Home.flexDemoShadow.setVisibility(true);
    }
  };

  frm004Home.btnFloatingConsoleCheck.onClick = function(){
    if(frm004Home.imgFloatingConsoleCheck.isVisible === true){
      frm004Home.imgFloatingConsoleCheck.setVisibility(false);
      frm004Home["flexFloatingConsole"]["isVisible"] = false;
    }
    else{
      frm004Home.imgFloatingConsoleCheck.setVisibility(true);
      frm004Home["flexFloatingConsole"]["isVisible"] = true;
      updateConsole();
    }
  };

  frm004Home.btnResetState.onClick = function(){
    tuta.animate.move(frm004Home.imgSwitch, 0, "", "38", null);
    tuta.fsm.stateChange(tuta.fsm.REQUESTS.BREAK);
    frm004Home.imgSwitchBg.src = "switchbgoff.png";
    driver_state = 0;
    frm004Home.flexActive.setVisibility(true);
    updateConsole();
  }

  frm004Home.btnShowCustRating.onClick = function(){    
    frm004Home.flexDarken.setVisibility(false);
    tuta.animate.move(frm004Home.flexDebugOptions, 0.3, "10%", "-160%", null); 
    kony.timer.schedule("custrate", function(){frm004Home["flexOverlay1"]["isVisible"] = true;
                                              }, 0.35, false);
  }

  frm004Home.btnTaxiActivateCheck.onClick = function(){
    if(frm004Home.imgTaxiActivateCheck.isVisible === true){
      frm004Home.imgTaxiActivateCheck.setVisibility(false);
      frm004Home.flexActive.setVisibility(false);
    }
    else{
      frm004Home.imgTaxiActivateCheck.setVisibility(true);
      frm004Home.flexActive.setVisibility(true);
    }
  };

  frm004Home.btnSignOut.onClick = function () {
    frm001LoginScreen.show();
  };

  frm004Home.txtDest.onDone = function(widget) {
    if(frm004Home.txtDest.text != null){
      frm004Home.flexFindingDest.setVisibility(true);
      //tuta.mobile.alert("Search", "Search Done");
      selectDest(frm004Home);      
    }
  };

  frm004Home.mapMain.onClick = function(map, location) {
    //  frm004Home.flexAddressList.setVisibility(false);
    //  frm004Home.flexAddressShadow.setVisibility(false);
    //kony.timer.schedule("showMarker", function(){frmMap["flexChangeDest"]["isVisible"] = true;}, 0.3, false);
    //resetSearchBar();
    searchMode = 0;
    updateConsole();
  };


  //Compose Messages
  frmMessageCompose.btnCancel.onClick = function () {frmMessageMain.show();};

  //Help | log issue
  frmLogIssue.btnBack.onClick = function () {frm004Home.show();};
  frmLogIssue.btnCancel.onClick = function () {frm004Home.show();};
  frmLogIssue.btnSubmitIssue.onClick = function () {frm004Home.show();};


  //Message List
  frmMessageMain.btnComposeMessage.onClick = function () {frmMessageCompose.show();};
  frmMessageMain.btnBack.onClick = function () {frm004Home.show();};

  frmMessageCompose.btnSend.onClick = function (){
    frmMessageCompose.txtMessage.text = "";
    frmMessageCompose.txtSendTo.text = "";
    frmMessageCompose["flexMessageSent"]["isVisible"] = true;    
  };

  frmMessageCompose.btnMsgPopup.onClick = function (){frmMessageCompose["flexMessageSent"]["isVisible"] = false; frmMessageMain.show();};

  //Read message
  frmMessageRead.btnBack.onClick = function () {frmMessageMain.show();};


  //Booking individual
  frmBooking.btnBack.onClick = function () {frmBookingsMain.show();};
  frmBooking.btnHelp.onClick = function () {frmLogIssue.show();};

  //Bookings List
  frmBookingsMain.btnBack.onClick = function() {frm004Home.show();};
  frmBookingsMain.segBookings.onRowClick = function() {frmBooking.show();};

  //About Tuta
  frmAboutTuta.btnBack.onClick = function () {frm004Home.show();};

  //Terms & Conditions
  frmTermsConditions.btnBack.onClick = function () {frm004Home.show();};

  //Flag Down Menu
  frmFlagDown.btnStartTrip.onClick = function () {flagDownRequest();};
  frmFlagDown.btnCancelTrip.onClick = function () {frm004Home.show();};

  //Trip History
  frmTripHistory.btnBack.onClick = function() {frm004Home.show();};
  frmTripHistory.segTripHistoryMain.onRowClick = function() {frmTripHistoryInfo.show();};

  //Trip History Single Item
  frmTripHistoryInfo.CopybtnBack02c79ca66b88140.onClick = function() {frmTripHistory.show();};
  frmTripHistoryInfo.btnHelp.onClick = function() {frmLogIssue.show();};

  //Pickup Request
  frmPickupRequest.btnTopDismiss.onClick = function(){frmPickupRequest["flexConfirmCancel"]["isVisible"] = false;}
  frmPickupRequest.btnBottomDismiss.onClick = function(){frmPickupRequest["flexConfirmCancel"]["isVisible"] = false;}
  frmPickupRequest.btnLeftDismiss.onClick = function(){frmPickupRequest["flexConfirmCancel"]["isVisible"] = false;}
  frmPickupRequest.btnRightDismiss.onClick = function(){frmPickupRequest["flexConfirmCancel"]["isVisible"] = false;}
  frmPickupRequest.btnCancel.onClick = function(){frmPickupRequest["flexConfirmCancel"]["isVisible"] = false;}

  frmPickupRequest.btnDecline.onClick = function() {frmPickupRequest["flexConfirmCancel"]["isVisible"] = true;};
  frmPickupRequest.btnAcceptRequest.onClick = function() {
    //TODO: START TRIP
    pickupRequest();
    //frm004Home.show();
  };

  frmPickupRequest.btnConfirm.onClick = function(){frmPickupRequest["flexConfirmCancel"]["isVisible"] = false; frm004Home.show();}

  /*=============================================================================
      ____           _            _                   
     |  _ \ ___  ___| |_      ___| |__   _____      __
     | |_) / _ \/ __| __|____/ __| '_ \ / _ \ \ /\ / /
     |  __/ (_) \__ \ ||_____\__ \ | | | (_) \ V  V / 
     |_|   \___/|___/\__|    |___/_| |_|\___/ \_/\_/  

  =============================================================================*/


  frm004Home.postShow = function (){
    updateConsole();
    if(driver_state === tuta.fsm.STATES.TRAWLING)
    {
      tuta.animate.move(frm004Home.imgSwitch, 0, "", "0", null);
      tuta.fsm.stateChange(tuta.fsm.REQUESTS.ACTIVE);
      frm004Home.imgSwitchBg.src = "switchbgon.png";
    }
    else if(driver_state === tuta.fsm.STATES.IDLE)
    {
      tuta.animate.move(frm004Home.imgSwitch, 0, "", "38", null);
      tuta.fsm.stateChange(tuta.fsm.REQUESTS.BREAK);
      frm004Home.imgSwitchBg.src = "switchbgoff.png";
    }
    else
    {
      frm004Home.flexActive.setVisibility(false);
    }
  };





  frm001LoginScreen.postShow = function (){   
    tuta.animate.move(frm001LoginScreen.flexMainButtons, 0, "", "0%", null); 
    tuta.animate.move(frm001LoginScreen.flexLoginButtons, 0, "0%", "100%", null); 
  };

  frm002SignupScreen.postShow = function (){   
    tuta.animate.move(frm002SignupScreen.scrollSignupBottom, 0, "116", "0%", null); 
    tuta.animate.move(frm002SignupScreen.scrollSignupBottomB, 0, "116", "100%", null); 
  };

  setUpSwipes();

  //frmSplash.rtDebug.text = "<span>Loading...<span>";



  //<<<<<<<<<<<<NOT SURE WHAT THIS IS>>>>>>>>>>>>>>>>


  kony.timer.schedule("firstinit", function () {

    //ustuck.init(function(response) {
    //tuta.mobile.alert("GEOCODE", response);
    //currentLocation = response.results[0];
    // kony.timer.schedule("splash", function() {  
    // }, 2, false);
    tuta.location.init(function(response){
      currentLocation = response.results[0];
      updateMap();
    });
    //});

  }, 0.1, false);

  //<<<<<<<<<<<<NOT SURE WHAT THIS IS>>>>>>>>>>>>>>>>




  /*  kony.timer.schedule("init", function () {

    init(function(response) {
      //tuta.mobile.alert("GEOCODE", response);
      currentLocation = response.results[0];
    });
  }, 4, true);*/
}


//INITCALLBACK

      /*
      var input = null;
      input = kony.store.getItem("user");
      if (input !== null){
        try{
          application.service("userService").invokeOperation(
            "login", {}, JSON.parse(input),
            function(result) {
              //tuta.util.alert("LOGIN SUCCESS", result.value);
              tuta.forms.frm004Home.show();
              kony.timer.schedule("startwatch", function(){tuta.startWatchLocation();}, 2, false);
              //tuta.forms.frm003CheckBox.show();
            },
            function(error) {
              // the service returns 403 (Not Authorised) if credentials are wrong
              tuta.util.alert("Error " + error.httpStatusCode, error.errmsg);
            }
          );
        }
        catch (ex){
          tuta.util.alert("Error", ex);
        }
      }  
      else{
        tuta.animate.moveBottomLeft(frm001LoginScreen.flexMainButtons, 0.2, "0%", "0", null);
      }*/






tuta.assignBooking = function() {

  var inputdata = {
    providerId: "serv8@ssa.co.za"
  };
  var input = {
    data: JSON.stringify(inputdata),
    id: "RoDgyMotuFrY1dCb"
  };

  try{
  application.service("manageService").invokeOperation(
    "bookingUpdate", {}, input,
    function(results) {
      tuta.util.alert("TEST", JSON.stringify(results));

    },
    function(error) {
      //tuta.util.alert("ERROR", error);
    });
  }
  catch (ex){

  }
};